/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
 
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>


#define  QW 0
#define LWR 2
#define RSE 1
#define ADJ 3

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LWR RSE>;
            then-layer = <ADJ>;
        };
    };

    behaviors {
        tlwr: tlwr {
            compatible = "zmk,behavior-tap-dance";
            label = "tlwr";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LWR>, <&tog LWR>, <&trans>;
        };

        trse: trse {
            compatible = "zmk,behavior-tap-dance";
            label = "trse";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo RSE>, <&tog RSE>, <&trans>;
        };
    };

    keymap {
        compatible = "zmk,keymap";


        qw_layer {
            bindings = <
                &kp Q   &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I     &kp O     &kp P    &kp LBKT  &kp RBKT
                &kp A   &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K     &kp L     &kp SEMI &kp APOS  
                &kp Z   &kp X   &kp C   &kp V   &kp B   &kp N   &kp M   &kp COMMA &kp DOT   &kp FSLH   
                &kp LCTRL &kp LGUI &kp LALT &kp SPACE &kp SPACE &kp SPACE &kp RALT &kp RSHFT 
            >;
        };

    };
};
